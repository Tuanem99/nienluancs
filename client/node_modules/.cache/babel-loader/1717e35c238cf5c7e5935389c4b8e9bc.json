{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    showMiniCart: false,\n    cartItem: JSON.parse(localStorage.getItem('cart')) || []\n  },\n  reducers: {\n    showMiniCart(state) {\n      state.showMiniCart = true;\n    },\n\n    hiddenMiniCart(state) {\n      state.showMiniCart = false;\n    },\n\n    addtoCart(state, action) {\n      const newItem = action.payload;\n      const index = state.cartItem.findIndex(x => x.idsp === newItem.idsp && x.size === newItem.size && x.color === newItem.color);\n\n      if (index >= 0) {\n        state.cartItem[index].soluong += newItem.soluong;\n        const a = JSON.parse(localStorage.getItem('cart'));\n        a[index].soluong += newItem.soluong;\n        localStorage.setItem('cart', JSON.stringify(a));\n      } else {\n        state.cartItem.push(newItem);\n        const a = JSON.parse(localStorage.getItem('cart')) || [];\n        a.push(newItem);\n        localStorage.setItem('cart', JSON.stringify(a));\n      }\n    },\n\n    setQuantity(state, action) {\n      const {\n        idsp,\n        soluong,\n        color,\n        size\n      } = action.payload;\n      console.log(action.payload);\n      const index = state.cartItem.findIndex(x => x.idsp === idsp && x.color === color && x.size === size);\n\n      if (index >= 0) {\n        state.cartItem[index].soluong = soluong;\n        const a = JSON.parse(localStorage.getItem('cart'));\n        a[index].soluong = soluong;\n        localStorage.setItem('cart', JSON.stringify(a));\n      }\n    },\n\n    removeFromCart(state, action) {\n      const idRemove = action.payload;\n      state.cartItem = state.cartItem.filter(x => x.idsp !== idRemove);\n      const a = JSON.parse(localStorage.getItem('cart'));\n      localStorage.setItem('cart', JSON.stringify(a.filter(x => x.idsp !== idRemove)));\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = cartSlice;\nexport const {\n  showMiniCart,\n  hiddenMiniCart,\n  setQuantity,\n  removeFromCart,\n  addtoCart\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/TUAN EM/Desktop/ct271-main/code/client/src/Slice/cartSlice.js"],"names":["createSlice","cartSlice","name","initialState","showMiniCart","cartItem","JSON","parse","localStorage","getItem","reducers","state","hiddenMiniCart","addtoCart","action","newItem","payload","index","findIndex","x","idsp","size","color","soluong","a","setItem","stringify","push","setQuantity","console","log","removeFromCart","idRemove","filter","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        showMiniCart: false,\n        cartItem: JSON.parse(localStorage.getItem('cart')) || [],\n    },\n    reducers: {\n        showMiniCart(state) {\n            state.showMiniCart = true;\n        },\n        hiddenMiniCart(state) {\n            state.showMiniCart = false;\n        },\n        addtoCart(state, action) {\n            const newItem = action.payload;\n            const index = state.cartItem.findIndex((x) => x.idsp === newItem.idsp && x.size === newItem.size && x.color === newItem.color)\n            if (index >= 0) {\n                state.cartItem[index].soluong += newItem.soluong\n                const a = JSON.parse(localStorage.getItem('cart'))\n                a[index].soluong += newItem.soluong\n                localStorage.setItem('cart', JSON.stringify(a))\n            } else {\n                state.cartItem.push(newItem)\n                const a = JSON.parse(localStorage.getItem('cart')) || [];\n                a.push(newItem)\n                localStorage.setItem('cart', JSON.stringify(a))\n            }\n\n        },\n        setQuantity(state, action) {\n            const {idsp, soluong, color, size} = action.payload;\n            console.log(action.payload)\n            const index = state.cartItem.findIndex(x => x.idsp === idsp && x.color === color && x.size === size)\n            if (index >= 0) {\n                state.cartItem[index].soluong = soluong;\n                const a = JSON.parse(localStorage.getItem('cart'));\n                a[index].soluong = soluong;\n                localStorage.setItem('cart', JSON.stringify(a))\n            }\n        },\n        removeFromCart(state, action) {\n            const idRemove = action.payload;\n            state.cartItem = state.cartItem.filter(x => x.idsp !== idRemove);\n            const a = JSON.parse(localStorage.getItem('cart'));\n            localStorage.setItem('cart', JSON.stringify(a.filter(x => x.idsp !== idRemove)))\n\n        }\n    }\n})\n\nconst {actions, reducer} = cartSlice;\nexport const {showMiniCart, hiddenMiniCart, setQuantity, removeFromCart, addtoCart} = actions;\nexport default reducer;"]},"metadata":{},"sourceType":"module"}