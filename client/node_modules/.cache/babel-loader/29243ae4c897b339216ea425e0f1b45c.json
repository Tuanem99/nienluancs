{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TUAN EM\\\\Desktop\\\\ct271-main\\\\code\\\\client\\\\src\\\\component\\\\Form-control\\\\PasswordField\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Controller } from 'react-hook-form';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { FormHelperText } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPasswordField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  lable: PropTypes.string,\n  disabled: PropTypes.bool\n};\nexport default function PasswordField(props) {\n  _s();\n\n  var _errors$name;\n\n  const {\n    form,\n    name,\n    lable,\n    disabled\n  } = props;\n  const {\n    errors\n  } = form;\n  const hasError = errors[name];\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword(x => !x);\n  }; // console.log(errors[name])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-adornment-password\",\n        children: lable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: name,\n        control: form.control,\n        as: OutlinedInput,\n        id: name,\n        type: showPassword ? 'text' : 'password',\n        label: lable,\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"toggle password visibility\",\n            onClick: toggleShowPassword,\n            edge: \"end\",\n            children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this),\n        disabled: disabled,\n        error: !!hasError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: !!hasError,\n        children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(PasswordField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = PasswordField;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordField\");","map":{"version":3,"sources":["C:/Users/TUAN EM/Desktop/ct271-main/code/client/src/component/Form-control/PasswordField/index.jsx"],"names":["React","useState","PropTypes","Controller","FormControl","InputLabel","OutlinedInput","InputAdornment","IconButton","Visibility","VisibilityOff","FormHelperText","PasswordField","propTypes","form","object","isRequired","name","string","lable","disabled","bool","props","errors","hasError","showPassword","setShowPassword","toggleShowPassword","x","control","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAAQC,cAAR,QAA6B,mBAA7B;;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACtBC,EAAAA,IAAI,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UADD;AAEtBC,EAAAA,IAAI,EAAEf,SAAS,CAACgB,MAAV,CAAiBF,UAFD;AAGtBG,EAAAA,KAAK,EAAEjB,SAAS,CAACgB,MAHK;AAItBE,EAAAA,QAAQ,EAAElB,SAAS,CAACmB;AAJE,CAA1B;AAOA,eAAe,SAAST,aAAT,CAAuBU,KAAvB,EAA8B;AAAA;;AAAA;;AACzC,QAAM;AAACR,IAAAA,IAAD;AAAOG,IAAAA,IAAP;AAAaE,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAgCE,KAAtC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAWT,IAAjB;AACA,QAAMU,QAAQ,GAAGD,MAAM,CAACN,IAAD,CAAvB;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAM0B,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,eAAe,CAACE,CAAC,IAAI,CAACA,CAAP,CAAf;AACH,GAFD,CANyC,CAUzC;;;AACA,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAuB,MAAA,OAAO,EAAC,UAA/B;AAA0C,MAAA,MAAM,EAAC,QAAjD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,6BAApB;AAAA,kBAAmDT;AAAnD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,IAAI,EAAEF,IADV;AAEI,QAAA,OAAO,EAAEH,IAAI,CAACe,OAFlB;AAGI,QAAA,EAAE,EAAEvB,aAHR;AAII,QAAA,EAAE,EAAEW,IAJR;AAKI,QAAA,IAAI,EAAEQ,YAAY,GAAG,MAAH,GAAY,UALlC;AAMI,QAAA,KAAK,EAAEN,KANX;AAOI,QAAA,YAAY,eACR,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAAA,iCACI,QAAC,UAAD;AACI,0BAAW,4BADf;AAEI,YAAA,OAAO,EAAEQ,kBAFb;AAGI,YAAA,IAAI,EAAC,KAHT;AAAA,sBAKKF,YAAY,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAmB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARR;AAkBI,QAAA,QAAQ,EAAEL,QAlBd;AAmBI,QAAA,KAAK,EAAE,CAAC,CAACI;AAnBb;AAAA;AAAA;AAAA;AAAA,cAFJ,eAuBI,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,CAAC,CAACA,QAAzB;AAAA,kCACKD,MAAM,CAACN,IAAD,CADX,iDACK,aAAca;AADnB;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA+BH;;GA1CuBlB,a;;KAAAA,a","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Controller} from 'react-hook-form';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {FormHelperText} from '@material-ui/core';\n\nPasswordField.propTypes = {\n    form: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    lable: PropTypes.string,\n    disabled: PropTypes.bool,\n}\n\nexport default function PasswordField(props) {\n    const {form, name, lable, disabled} = props;\n    const {errors} = form;\n    const hasError = errors[name];\n    const [showPassword, setShowPassword] = useState(false);\n\n    const toggleShowPassword = () => {\n        setShowPassword(x => !x);\n    }\n\n    // console.log(errors[name])\n    return (\n        <>\n            <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n                <InputLabel htmlFor=\"outlined-adornment-password\">{lable}</InputLabel>\n                <Controller\n                    name={name}\n                    control={form.control}\n                    as={OutlinedInput}\n                    id={name}\n                    type={showPassword ? 'text' : 'password'}\n                    label={lable}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={toggleShowPassword}\n                                edge=\"end\"\n                            >\n                                {showPassword ? <Visibility/> : <VisibilityOff/>}\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    disabled={disabled}\n                    error={!!hasError}\n                />\n                <FormHelperText error={!!hasError}>\n                    {errors[name]?.message}\n                </FormHelperText>\n            </FormControl>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}