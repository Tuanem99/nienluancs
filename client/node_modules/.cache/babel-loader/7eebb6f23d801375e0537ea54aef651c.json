{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport productApi from '../API/productAPI';\nexport const getAlldetail = createAsyncThunk('product/getall', async () => {\n  const data = await productApi.getAlls();\n  localStorage.setItem('Product', JSON.stringify(data));\n  return data;\n});\nexport const createProduct = createAsyncThunk('Product/create', async payload => {\n  await productApi.create(payload);\n  const Product = await productApi.getAll();\n  localStorage.setItem('Product', JSON.stringify(Product));\n  return Product;\n});\nexport const deleteProduct = createAsyncThunk('product/delete', async payload => {\n  await productApi.remove(payload);\n  const product = await productApi.getAll();\n  localStorage.setItem('Product', JSON.stringify(product));\n  return product;\n});\nconst ProductSlice = createSlice({\n  name: 'Product',\n  initialState: {\n    Product: JSON.parse(localStorage.getItem('Product')) || {}\n  },\n  reducers: {},\n  extraReducers: {\n    [getAlldetail.fulfilled]: (state, action) => {\n      state.Product = action.payload;\n    },\n    [createProduct.fulfilled]: (state, action) => {\n      state.Product = action.payload;\n    },\n    [deleteProduct.fulfilled]: (state, action) => {\n      state.Product = action.payload;\n    }\n  }\n});\nconst {\n  reducer\n} = ProductSlice;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/TUAN EM/Desktop/ct271-main/code/client/src/Slice/productSlice.js"],"names":["createSlice","createAsyncThunk","productApi","getAlldetail","data","getAlls","localStorage","setItem","JSON","stringify","createProduct","payload","create","Product","getAll","deleteProduct","remove","product","ProductSlice","name","initialState","parse","getItem","reducers","extraReducers","fulfilled","state","action","reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,gBAAD,EAAmB,YAAY;AACvE,QAAMG,IAAI,GAAG,MAAMF,UAAU,CAACG,OAAX,EAAnB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhC;AACA,SAAOA,IAAP;AACH,CAJ2C,CAArC;AAMP,OAAO,MAAMM,aAAa,GAAGT,gBAAgB,CAAC,gBAAD,EAAmB,MAAOU,OAAP,IAAmB;AAC/E,QAAMT,UAAU,CAACU,MAAX,CAAkBD,OAAlB,CAAN;AACA,QAAME,OAAO,GAAG,MAAMX,UAAU,CAACY,MAAX,EAAtB;AACAR,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeI,OAAf,CAAhC;AACA,SAAOA,OAAP;AACH,CAL4C,CAAtC;AAOP,OAAO,MAAME,aAAa,GAAGd,gBAAgB,CAAC,gBAAD,EAAmB,MAAOU,OAAP,IAAmB;AAC/E,QAAMT,UAAU,CAACc,MAAX,CAAkBL,OAAlB,CAAN;AACA,QAAMM,OAAO,GAAG,MAAMf,UAAU,CAACY,MAAX,EAAtB;AACAR,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeQ,OAAf,CAAhC;AACA,SAAOA,OAAP;AACH,CAL4C,CAAtC;AAQP,MAAMC,YAAY,GAAGlB,WAAW,CAAC;AAC7BmB,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAE;AACVP,IAAAA,OAAO,EAAEL,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACgB,OAAb,CAAqB,SAArB,CAAX,KAA+C;AAD9C,GAFe;AAK7BC,EAAAA,QAAQ,EAAE,EALmB;AAM7BC,EAAAA,aAAa,EAAE;AACX,KAACrB,YAAY,CAACsB,SAAd,GAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACb,OAAN,GAAgBc,MAAM,CAAChB,OAAvB;AACH,KAHU;AAIX,KAACD,aAAa,CAACe,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACb,OAAN,GAAgBc,MAAM,CAAChB,OAAvB;AACH,KANU;AAOX,KAACI,aAAa,CAACU,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACb,OAAN,GAAgBc,MAAM,CAAChB,OAAvB;AACH;AATU;AANc,CAAD,CAAhC;AAkBA,MAAM;AAACiB,EAAAA;AAAD,IAAYV,YAAlB;AACA,eAAeU,OAAf","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport productApi from '../API/productAPI';\n\nexport const getAlldetail = createAsyncThunk('product/getall', async () => {\n    const data = await productApi.getAlls();\n    localStorage.setItem('Product', JSON.stringify(data))\n    return data;\n});\n\nexport const createProduct = createAsyncThunk('Product/create', async (payload) => {\n    await productApi.create(payload);\n    const Product = await productApi.getAll();\n    localStorage.setItem('Product', JSON.stringify(Product))\n    return Product;\n});\n\nexport const deleteProduct = createAsyncThunk('product/delete', async (payload) => {\n    await productApi.remove(payload);\n    const product = await productApi.getAll();\n    localStorage.setItem('Product', JSON.stringify(product))\n    return product;\n});\n\n\nconst ProductSlice = createSlice({\n    name: 'Product',\n    initialState: {\n        Product: JSON.parse(localStorage.getItem('Product')) || {}\n    },\n    reducers: {},\n    extraReducers: {\n        [getAlldetail.fulfilled]: (state, action) => {\n            state.Product = action.payload\n        },\n        [createProduct.fulfilled]: (state, action) => {\n            state.Product = action.payload\n        },\n        [deleteProduct.fulfilled]: (state, action) => {\n            state.Product = action.payload\n        }\n    }\n});\nconst {reducer} = ProductSlice;\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}