{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport orderApi from '../API/orderAPI';\nimport userApi from \"../API/userAPI\";\nexport const login = createAsyncThunk('user/login', async payload => {\n  const data = await userApi.login(payload);\n  localStorage.setItem('x-access-token', data.accessToken);\n  localStorage.setItem('user', JSON.stringify(data.USER));\n  return data.USER;\n});\nexport const updateProfile = createAsyncThunk('user/profile', async payload => {\n  await userApi.update(payload);\n});\nexport const orderUser = createAsyncThunk('user/order', async () => {\n  const data = await orderApi.get();\n  localStorage.setItem('order', JSON.stringify(data));\n  return data;\n});\nexport const getProfile = createAsyncThunk('user/getprofile', async () => {\n  const data = await userApi.get();\n  localStorage.setItem('profile', JSON.stringify(data));\n  return data;\n});\nexport const changepwd = createAsyncThunk('user/changepwd', async payload => {\n  const res = await userApi.changePwd(payload);\n  console.log(res);\n  return res;\n});\nexport const uploadAvt = createAsyncThunk('user/uploadAvt', async payload => {\n  const data = await userApi.upload(payload);\n  const a = JSON.parse(localStorage.getItem('profile')) || {};\n  a.avt = data;\n  localStorage.setItem('profile', JSON.stringify(a));\n  return data;\n});\nconst UserSlice = createSlice({\n  name: 'user',\n  initialState: {\n    current: JSON.parse(localStorage.getItem('user')) || {},\n    profile: JSON.parse(localStorage.getItem('profile')) || {},\n    order: JSON.parse(localStorage.getItem('order')) || {}\n  },\n  reducers: {\n    Logout(state) {\n      state.current = {};\n      state.profile = {};\n      localStorage.removeItem('user');\n      localStorage.removeItem('profile');\n      localStorage.removeItem('x-access-token');\n      localStorage.removeItem('cart');\n      localStorage.removeItem('order');\n    }\n\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n      state.current = action.payload;\n    },\n    [uploadAvt.fulfilled]: (state, action) => {\n      state.profile.avt = action.payload;\n    },\n    [getProfile.fulfilled]: (state, action) => {\n      state.profile = action.payload;\n    },\n    [orderUser.fulfilled]: (state, action) => {\n      state.order = action.payload;\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = UserSlice;\nexport const {\n  Logout\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["E:/des/ct271-main/code/client/src/Slice/useSlice.js"],"names":["createSlice","createAsyncThunk","orderApi","userApi","login","payload","data","localStorage","setItem","accessToken","JSON","stringify","USER","updateProfile","update","orderUser","get","getProfile","changepwd","res","changePwd","console","log","uploadAvt","upload","a","parse","getItem","avt","UserSlice","name","initialState","current","profile","order","reducers","Logout","state","removeItem","extraReducers","fulfilled","action","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport orderApi from '../API/orderAPI';\nimport userApi from \"../API/userAPI\";\n\nexport const login = createAsyncThunk(\n    'user/login',\n    async (payload) =>{\n        const data = await userApi.login(payload);\n        localStorage.setItem('x-access-token', data.accessToken);\n        localStorage.setItem('user', JSON.stringify(data.USER));\n\n        return data.USER;\n    });\nexport const updateProfile = createAsyncThunk(\n    'user/profile',\n    async (payload) =>{\n        await userApi.update(payload);\n    });\n\nexport const orderUser = createAsyncThunk(\n        'user/order',\n        async () =>{\n            const data = await orderApi.get()\n            localStorage.setItem('order', JSON.stringify(data));\n            return data;\n        });\n\nexport const getProfile = createAsyncThunk(\n    'user/getprofile',\n    async () =>{\n        const data = await userApi.get();\n        localStorage.setItem('profile', JSON.stringify(data))\n        return data;\n});\n\nexport const changepwd = createAsyncThunk(\n    'user/changepwd',\n    async (payload) =>{\n        const res = await userApi.changePwd(payload);\n        console.log(res)\n        return res;\n});\n\n\nexport const uploadAvt = createAsyncThunk(\n    'user/uploadAvt',\n    async (payload) =>{\n        const data = await userApi.upload(payload);\n        const a = JSON.parse(localStorage.getItem('profile')) || {};\n        a.avt = data;\n        localStorage.setItem('profile', JSON.stringify(a))\n        return data;\n    });\nconst UserSlice = createSlice({\n    name:'user',\n    initialState: {\n        current: JSON.parse(localStorage.getItem('user')) || {},\n        profile:  JSON.parse(localStorage.getItem('profile')) || {},\n        order:  JSON.parse(localStorage.getItem('order')) || {},\n    },\n    reducers: {\n        Logout(state){\n            state.current = {};\n            state.profile = {};\n            localStorage.removeItem('user');\n            localStorage.removeItem('profile');\n            localStorage.removeItem('x-access-token');\n            localStorage.removeItem('cart');\n            localStorage.removeItem('order')\n        },\n    },\n    extraReducers:{\n        [login.fulfilled] : (state, action) =>{\n            state.current = action.payload;\n        },\n        [uploadAvt.fulfilled] : (state, action) =>{\n            state.profile.avt =  action.payload;\n        },\n        [getProfile.fulfilled] : (state, action) =>{\n            state.profile = action.payload;\n        },\n        [orderUser.fulfilled] : (state, action) =>{\n            state.order = action.payload;\n        }\n\n    }\n});\n\nconst {actions, reducer} = UserSlice;\nexport const {Logout} = actions;\nexport default reducer;"]},"metadata":{},"sourceType":"module"}