{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport categoryAPI from '../API/categoryAPI';\nexport const getAllCategory = createAsyncThunk('Category/getall', async () => {\n  const data = await categoryAPI.getAll();\n  localStorage.setItem('Category', JSON.stringify(data));\n  return data;\n});\nexport const createCategory = createAsyncThunk('Category/create', async payload => {\n  await categoryAPI.create(payload);\n  const Category = await categoryAPI.getAll();\n  localStorage.setItem('Category', JSON.stringify(Category));\n  return Category;\n});\nexport const updateCategory = createAsyncThunk('Category/update', async payload => {\n  await categoryAPI.update(payload);\n  const Category = await categoryAPI.getAll();\n  localStorage.setItem('Category', JSON.stringify(Category));\n  return Category;\n});\nexport const deleteCategory = createAsyncThunk('Category/delete', async payload => {\n  await categoryAPI.remove(payload);\n  const Category = await categoryAPI.getAll();\n  localStorage.setItem('Category', JSON.stringify(Category));\n  return Category;\n});\nconst CategorySlice = createSlice({\n  name: 'Category',\n  initialState: {\n    Category: JSON.parse(localStorage.getItem('Category')) || {}\n  },\n  reducers: {},\n  extraReducers: {\n    [getAllCategory.fulfilled]: (state, action) => {\n      state.Category = action.payload;\n    },\n    [createCategory.fulfilled]: (state, action) => {\n      state.Category = action.payload;\n    },\n    [updateCategory.fulfilled]: (state, action) => {\n      state.Category = action.payload;\n    },\n    [deleteCategory.fulfilled]: (state, action) => {\n      state.Category = action.payload;\n    }\n  }\n});\nconst {\n  reducer\n} = CategorySlice;\nexport default reducer;","map":{"version":3,"sources":["E:/des/ct271-main/code/client/src/Slice/categorySlice.js"],"names":["createSlice","createAsyncThunk","categoryAPI","getAllCategory","data","getAll","localStorage","setItem","JSON","stringify","createCategory","payload","create","Category","updateCategory","update","deleteCategory","remove","CategorySlice","name","initialState","parse","getItem","reducers","extraReducers","fulfilled","state","action","reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAAC,iBAAD,EAAoB,YAAY;AAC1E,QAAMG,IAAI,GAAG,MAAMF,WAAW,CAACG,MAAZ,EAAnB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACA,SAAOA,IAAP;AACH,CAJ6C,CAAvC;AAKP,OAAO,MAAMM,cAAc,GAAGT,gBAAgB,CAAC,iBAAD,EAAoB,MAAOU,OAAP,IAAmB;AACjF,QAAMT,WAAW,CAACU,MAAZ,CAAmBD,OAAnB,CAAN;AACA,QAAME,QAAQ,GAAG,MAAMX,WAAW,CAACG,MAAZ,EAAvB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAjC;AACA,SAAOA,QAAP;AACH,CAL6C,CAAvC;AAOP,OAAO,MAAMC,cAAc,GAAGb,gBAAgB,CAAC,iBAAD,EAAoB,MAAOU,OAAP,IAAmB;AACjF,QAAMT,WAAW,CAACa,MAAZ,CAAmBJ,OAAnB,CAAN;AACA,QAAME,QAAQ,GAAG,MAAMX,WAAW,CAACG,MAAZ,EAAvB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAjC;AACA,SAAOA,QAAP;AACH,CAL6C,CAAvC;AAOP,OAAO,MAAMG,cAAc,GAAGf,gBAAgB,CAAC,iBAAD,EAAoB,MAAOU,OAAP,IAAmB;AACjF,QAAMT,WAAW,CAACe,MAAZ,CAAmBN,OAAnB,CAAN;AACA,QAAME,QAAQ,GAAG,MAAMX,WAAW,CAACG,MAAZ,EAAvB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAjC;AACA,SAAOA,QAAP;AACH,CAL6C,CAAvC;AAOP,MAAMK,aAAa,GAAGlB,WAAW,CAAC;AAC9BmB,EAAAA,IAAI,EAAE,UADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVP,IAAAA,QAAQ,EAAEL,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACgB,OAAb,CAAqB,UAArB,CAAX,KAAgD;AADhD,GAFgB;AAK9BC,EAAAA,QAAQ,EAAE,EALoB;AAM9BC,EAAAA,aAAa,EAAE;AACX,KAACrB,cAAc,CAACsB,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAAChB,OAAxB;AACH,KAHU;AAIX,KAACD,cAAc,CAACe,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAAChB,OAAxB;AACH,KANU;AAOX,KAACG,cAAc,CAACW,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAAChB,OAAxB;AACH,KATU;AAUX,KAACK,cAAc,CAACS,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAAChB,OAAxB;AACH;AAZU;AANe,CAAD,CAAjC;AAqBA,MAAM;AAACiB,EAAAA;AAAD,IAAYV,aAAlB;AACA,eAAeU,OAAf","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport categoryAPI from '../API/categoryAPI';\n\nexport const getAllCategory = createAsyncThunk('Category/getall', async () => {\n    const data = await categoryAPI.getAll();\n    localStorage.setItem('Category', JSON.stringify(data))\n    return data;\n});\nexport const createCategory = createAsyncThunk('Category/create', async (payload) => {\n    await categoryAPI.create(payload);\n    const Category = await categoryAPI.getAll();\n    localStorage.setItem('Category', JSON.stringify(Category))\n    return Category;\n});\n\nexport const updateCategory = createAsyncThunk('Category/update', async (payload) => {\n    await categoryAPI.update(payload);\n    const Category = await categoryAPI.getAll();\n    localStorage.setItem('Category', JSON.stringify(Category))\n    return Category;\n});\n\nexport const deleteCategory = createAsyncThunk('Category/delete', async (payload) => {\n    await categoryAPI.remove(payload);\n    const Category = await categoryAPI.getAll();\n    localStorage.setItem('Category', JSON.stringify(Category))\n    return Category;\n});\n\nconst CategorySlice = createSlice({\n    name: 'Category',\n    initialState: {\n        Category: JSON.parse(localStorage.getItem('Category')) || {}\n    },\n    reducers: {},\n    extraReducers: {\n        [getAllCategory.fulfilled]: (state, action) => {\n            state.Category = action.payload\n        },\n        [createCategory.fulfilled]: (state, action) => {\n            state.Category = action.payload\n        },\n        [updateCategory.fulfilled]: (state, action) => {\n            state.Category = action.payload\n        },\n        [deleteCategory.fulfilled]: (state, action) => {\n            state.Category = action.payload\n        }\n    }\n});\nconst {reducer} = CategorySlice;\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}